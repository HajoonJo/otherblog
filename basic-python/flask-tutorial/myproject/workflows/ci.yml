name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: Basic Python

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://test:test@localhost:5432/test_db

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black

      - name: Lint with flake8
        run: flake8 flaskr

      - name: Check code style with black
        run: black --check flaskr

      - name: Run backend tests with coverage
        run: pytest --cov=flaskr --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml

      - name: Test frontend (if using JS/React/Vue)
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run test
          fi

      - name: Build Docker image
        run: docker build -t flaskr-app .

      - name: Validate Docker container runs
        run: docker run --rm -e FLASK_ENV=testing flaskr-app flask --help